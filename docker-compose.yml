version: "3.7"

services:
  db:
    image: postgres:13.1-alpine
    environment:
      POSTGRES_USER: $DATABASE_OWNER
      POSTGRES_PASSWORD: $DATABASE_OWNER_PASSWORD
      POSTGRES_DB: $DATABASE_NAME
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data:rw
    ports:
      - 5432:5432

  migrations:
    environment:
      ROOT_DATABASE_URL: postgres://$DATABASE_OWNER:$DATABASE_OWNER_PASSWORD@$DATABASE_HOST/template1
      DATABASE_URL: postgres://$DATABASE_OWNER:$DATABASE_OWNER_PASSWORD@$DATABASE_HOST/$DATABASE_NAME
      SHADOW_DATABASE_URL: postgres://$DATABASE_OWNER:$DATABASE_OWNER_PASSWORD@$DATABASE_HOST/${DATABASE_NAME}_shadow
    build:
      context: .
      dockerfile: apps/database/Dockerfile
      target: dev
      args:
        BASE_IMAGE: ${BASE_IMAGE_NODE_ALPINE}
    volumes:
      - ./apps/database:/apps/database
    env_file:
      - .env
    depends_on:
      - db

  gql:
    environment:
      DATABASE_AUTHENTICATOR_URL: postgres://$DATABASE_AUTHENTICATOR:$DATABASE_AUTHENTICATOR_PASSWORD@$$DATABASE_HOST/$DATABASE_NAME
    build:
      context: .
      target: dev
      dockerfile: apps/graphql/Dockerfile
    volumes:
      - ./apps/graphql:/app
    env_file:
      - .env
    ports:
      - 5000:5000
    depends_on:
      - migrations

volumes:
  pg_data:
